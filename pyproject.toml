[tool.poetry]
name = "pvcast"
version = "0.0.0"
description = "Open-source python package to make short-term local solar power forecasts."
authors = ["Stefan de Lange <langestefan@msn.com>"]
maintainers = ["Stefan de Lange <langestefan@msn.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/Open-HEMS/pvcast"
repository = "https://github.com/Open-HEMS/pvcast"
documentation = "https://github.com/Open-HEMS/pvcast"
keywords = ["energy", "pvcast", "api", "solar", "photovoltaics"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
]
packages = [{ include = "pvcast" }]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/Open-HEMS/pvcast/issues"
Changelog = "https://github.com/Open-HEMS/pvcast/releases"

[tool.poetry.dependencies]
python = "^3.12"
numpy = ">=1.26.3"
pandas = ">=2.1.4"
pvlib = ">=0.10.3"
pyyaml = ">=6.0.1"
beautifulsoup4 = ">=4.12.2"
voluptuous = ">=0.14.1"
fastapi = ">=0.109.0"
uvicorn = ">=0.23.2"
lxml = ">=4.9.4"
websockets = ">=12.0"
pyarrow = ">=14.0.2"
polars-lts-cpu = "^0.20.6"

[tool.poetry.group.frontend.dependencies]
solara = ">=1.25.1"

[tool.poetry.group.dev.dependencies]
watchfiles = "==0.24.0"
blacken-docs = "==1.18.0"
black = "==24.8.0"
ruff = "==0.6.9"
pytest = "==8.3.3"
pytest_cov = "==4.1.0"
pytest_mock = "==3.14.0"
pytest_xdist = "==3.6.1"
mock = "==5.1.0"
responses = "==0.25.3"
mypy = "==1.11.2"
covdefaults = "==2.3.0"
codespell = "==2.3.0"
coverage = { version = "7.6.1", extras = ["toml"] }
pre_commit = "==4.0.1"
pre_commit_hooks = "==4.6.0"
pylint = "==3.3.1"
safety = "==3.2.8"
yamllint = "==1.35.1"
types_requests = "==2.32.0.20240914"
types_pytz = "==2024.2.0.20241003"
types-pyyaml = "^6.0.12.12"
httpx = "0.27.2"

[tool.codespell]
skip = 'poetry.lock'

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["pvcast"]

[tool.coverage.report]
fail_under = 90
show_missing = true
# these files are covered by locally run integration tests
omit = [
    "pvcast/homeassistant/homeassistantapi.py",
    "pvcast/weather/homeassistant.py",
]

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.12"

# flake8-mypy expects the two following for sensible formatting
show_column_numbers = true

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.BASIC]
good-names = ["_", "ex", "fp", "i", "id", "j", "k", "on", "Run", "T", "wv"]

[tool.pylint."MESSAGES CONTROL"]
disable = ["duplicate-code", "format", "unsubscriptable-object"]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length = 88

[tool.pylint.DESIGN]
max-attributes = 20

[tool.pylint.MASTER]
ignore-paths = [
  "tests",
]

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning:dateutil.*:",
                  "ignore::DeprecationWarning:pyarrow.*:"
]
addopts = "--cov-report xml:coverage.xml --cov pvcast --cov-fail-under 0 --cov-append -m 'not integration' --cov-report term-missing"
pythonpath = ["src"]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
testpaths = "tests"
junit_family = "xunit2"
markers = [
    "integration: marks as integration test",
    "notebooks: marks as notebook test",
    "gpu: marks as gpu test",
    "slow: marks tests as slow",
    "unit: fast offline tests",
]

[tool.ruff]
select = ["ALL"]
ignore = [
    "ANN101",  # Self... explanatory
    "ANN401",  # Opinioated warning on disallowing dynamically typed expressions
    "D203",    # Conflicts with other rules
    "D213",    # Conflicts with other rules
    "D417",    # False positives in some occasions
    "PLR2004", # Just annoying, not really useful
    "PLR0913", # Some functions need arguments to be passed

    # Formatter conflicts
    "COM812",
    "COM819",
    "D206",
    "E501",
    "ISC001",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "W191",
]

[tool.ruff.flake8-pytest-style]
mark-parentheses = false
fixture-parentheses = false

[tool.ruff.per-file-ignores]
"scripts/*" = ["INP001"]

[tool.ruff.isort]
known-first-party = ["pvcast"]

[tool.ruff.mccabe]
max-complexity = 25

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
